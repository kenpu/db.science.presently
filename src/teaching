{"T":"article","title":"","data":"title:  CS Education","children":[{"T":"section","data":"","children":[{"T":"segment","children":[{"T":"box","children":[{"T":"markdown","source":"# Undergraduate Courses","uuid":"14daf39d-908a-482c-9211-0bd0e549d772"}],"data":"","orient":"vertical"},{"T":"box","children":[{"T":"markdown","source":"## _Design and Analysis of Algorithms_ \n\n(CSCI 3070U)\n\n> This course introduces students to the fundamental principles, design and analysis of algorithms.  We will study a number of algorithm and their analysis.\n> Students will gain the working knowledge of how to incorporating classical algorithms into their computer programs, and be able to synthesize new algorithmic solutions in problem solving.\n\n[Course material](http://csci3070u.github.io)","uuid":"62b0b402-29a9-4812-ad83-dcfb12bdc41b"},{"T":"markdown","source":"## _Compiler_\n\n(CSCI 4020U)\n\n> This course introduces students to concepts such as abstract syntax trees, parsing and code generation of computer programs.  We will cover topics including context free grammars, parsing algorithms, language syntax design and type systems, code general and code optimization.\n\nCourse material will be available in January 2016.","uuid":"01408a77-a831-4f2b-9d98-a5eb4850d4a4"},{"T":"markdown","source":"## _Programming Languages_\n\n(CSCI 3055U)\n\n> This course broadens one's approciation of programming by examining the strenegths and paradigms of a variety of programming languages.  We will study the design philosophy of several programming languages.  In particular, students will gain _working knowledge_ and approciation of languages such as (1) Scala, (2) Clojure and (3) Haskell.\n\nCourse material will be available in January 2016.","uuid":"5f30e924-b77a-4397-8295-47cfa4335673"}],"data":"","orient":"horizontal"}],"data":"style:\n  fontSize: 100%","orient":"vertical","layout":"slide"}]}]}